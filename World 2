local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\225\108","\160\207\66\22\220"),function(v42) if (v9(v42,2)==(246 -167)) then local v99=0;while true do if (v99==0) then v30=v8(v11(v42,1,1));return "";end end else local v100=v10(v8(v42,16));if v30 then local v110=0;local v111;while true do if (v110==0) then v111=v13(v100,v30);v30=nil;v110=1;end if (v110==1) then return v111;end end else return v100;end end end);local function v31(v43,v44,v45) if v45 then local v101=0;local v102;while true do if (v101==0) then v102=(v43/((5 -3)^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v102-(v102%1) ;end end else local v103=2^(v44-1) ;return (((v43%(v103 + v103))>=v103) and 1) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34() local v49=0;local v50;local v51;local v52;local v53;while true do if (v49==1) then return (v53 * (32385633 -15608417)) + (v52 * 65536) + (v51 * 256) + v50 ;end if (v49==0) then v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v49=1;end end end local function v35() local v54=v34();local v55=v34();local v56=2 -1 ;local v57=(v31(v55,1,639 -(555 + 64) ) * ((933 -(857 + 74))^32)) + v54 ;local v58=v31(v55,21,31);local v59=((v31(v55,32)==1) and  -1) or 1 ;if (v58==0) then if (v57==0) then return v59 * 0 ;else local v112=0;while true do if (v112==0) then v58=1;v56=0;break;end end end elseif (v58==2047) then return ((v57==0) and (v59 * (1/(568 -(367 + 201))))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end local function v36(v60) local v61=0;local v62;local v63;while true do if (v61==1) then v62=v11(v27,v29,(v29 + v60) -(1 + 0) );v29=v29 + v60 ;v61=2;end if (v61==3) then return v14(v63);end if (v61==2) then v63={};for v113=1, #v62 do v63[v113]=v10(v9(v11(v62,v113,v113)));end v61=3;end if (v61==0) then v62=nil;if  not v60 then local v120=0;while true do if (v120==0) then v60=v34();if (v60==(927 -(214 + 713))) then return "";end break;end end end v61=1;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v77=1,v68 do local v78=0;local v79;local v80;while true do if (v78==0) then v79=v32();v80=nil;v78=1;end if (1==v78) then if (v79==1) then v80=v32()~=0 ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v69[v77]=v80;break;end end end v67[3]=v32();for v81=1,v34() do local v82=v32();if (v31(v82,1,1)==0) then local v106=0;local v107;local v108;local v109;while true do if (v106==1) then v109={v33(),v33(),nil,nil};if (v107==0) then v109[3]=v33();v109[4]=v33();elseif (v107==1) then v109[3]=v34();elseif (v107==2) then v109[3]=v34() -((879 -(282 + 595))^16) ;elseif (v107==3) then v109[1640 -(1523 + 114) ]=v34() -(2^(15 + 1)) ;v109[4]=v33();end v106=2;end if (v106==0) then v107=v31(v82,2,3);v108=v31(v82,4,6);v106=1;end if (v106==3) then if (v31(v108,3,3)==1) then v109[4]=v69[v109[4]];end v64[v81]=v109;break;end if (v106==2) then if (v31(v108,1,1)==1) then v109[2]=v69[v109[2]];end if (v31(v108,2,2)==1) then v109[3]=v69[v109[3]];end v106=3;end end end end for v83=1,v34() do v65[v83-1 ]=v39();end return v67;end local function v40(v71,v72,v73) local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...) local v85=v74;local v86=v75;local v87=v76;local v88=v38;local v89=1 -0 ;local v90= -1;local v91={};local v92={...};local v93=v20("#",...) -1 ;local v94={};local v95={};for v104=0,v93 do if (v104>=v87) then v91[v104-v87 ]=v92[v104 + 1 ];else v95[v104]=v92[v104 + 1 ];end end local v96=(v93-v87) + 1 ;local v97;local v98;while true do local v105=0;while true do if (0==v105) then v97=v85[v89];v98=v97[1];v105=1;end if (v105==1) then if (v98<=41) then if (v98<=20) then if (v98<=9) then if (v98<=4) then if (v98<=1) then if (v98==0) then local v136=0;local v137;while true do if (v136==0) then v137=v97[2];do return v21(v95,v137,v90);end break;end end else local v138=0;local v139;local v140;local v141;while true do if (1==v138) then v141=v95[v139] + v140 ;v95[v139]=v141;v138=2;end if (v138==0) then v139=v97[2];v140=v95[v139 + 2 ];v138=1;end if (2==v138) then if (v140>0) then if (v141<=v95[v139 + 1 ]) then v89=v97[3];v95[v139 + 3 ]=v141;end elseif (v141>=v95[v139 + (1271 -(226 + 1044)) ]) then local v397=0;while true do if (v397==0) then v89=v97[12 -9 ];v95[v139 + 3 ]=v141;break;end end end break;end end end elseif (v98<=(119 -(32 + 85))) then v95[v97[2]]=v95[v97[3]]%v97[4] ;elseif (v98>3) then local v225=v97[2];v95[v225]=v95[v225]();else v95[v97[2 + 0 ]][v95[v97[3]]]=v97[4];end elseif (v98<=6) then if (v98>5) then local v143=0;local v144;while true do if (v143==0) then v144=v97[2];v95[v144]=v95[v144](v21(v95,v144 + 1 ,v90));break;end end else v95[v97[2]]={};end elseif (v98<=(2 + 5)) then if (v95[v97[959 -(892 + 65) ]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98==8) then v89=v97[3];else local v231=v86[v97[3]];local v232;local v233={};v232=v18({},{[v7("\67\34\206\29\134\121\5","\226\28\125\167\115")]=function(v301,v302) local v303=v233[v302];return v303[1][v303[2]];end,[v7("\196\213\249\195\245\43\140\255\239\239","\226\155\138\151\166\130\66")]=function(v304,v305,v306) local v307=v233[v305];v307[1][v307[2]]=v306;end});for v309=1,v97[4] do local v310=0;local v311;while true do if (v310==1) then if (v311[1]==77) then v233[v309-1 ]={v95,v311[3]};else v233[v309-1 ]={v72,v311[3]};end v94[ #v94 + (1 -0) ]=v233;break;end if (v310==0) then v89=v89 + 1 ;v311=v85[v89];v310=1;end end end v95[v97[2]]=v40(v231,v232,v73);end elseif (v98<=(25 -11)) then if (v98<=11) then if (v98>10) then local v146=v97[2];local v147=v95[v97[353 -(87 + 263) ]];v95[v146 + 1 ]=v147;v95[v146]=v147[v97[4]];else local v151=v97[2];local v152=v95[v151];local v153=v95[v151 + 2 ];if (v153>0) then if (v152>v95[v151 + 1 ]) then v89=v97[3];else v95[v151 + 3 ]=v152;end elseif (v152<v95[v151 + 1 ]) then v89=v97[3];else v95[v151 + 3 ]=v152;end end elseif (v98<=12) then v95[v97[2]][v95[v97[3]]]=v97[4];elseif (v98>13) then v95[v97[2]]=v95[v97[3]]%v97[184 -(67 + 113) ] ;elseif (v95[v97[2 + 0 ]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=17) then if (v98<=15) then v95[v97[2]][v97[3]]=v95[v97[4]];elseif (v98==16) then v95[v97[4 -2 ]]=v95[v97[3]]%v95[v97[4]] ;else for v312=v97[2],v97[3] do v95[v312]=nil;end end elseif (v98<=18) then v95[v97[2]][v97[3]]=v97[4];elseif (v98>19) then v95[v97[2]]=v95[v97[3]][v97[4]];else local v239=0;local v240;while true do if (v239==0) then v240=v97[2];v95[v240]=v95[v240](v21(v95,v240 + 1 ,v97[3]));break;end end end elseif (v98<=30) then if (v98<=(19 + 6)) then if (v98<=22) then if (v98>21) then v95[v97[2]]=v95[v97[3]];else v95[v97[2]]=v95[v97[3]] + v97[4] ;end elseif (v98<=23) then v95[v97[2]]=v95[v97[3]][v97[4]];elseif (v98>24) then v95[v97[2]]=v95[v97[3]] + v97[4] ;else v95[v97[2]]();end elseif (v98<=(107 -80)) then if (v98>26) then v95[v97[2]]={};else local v166=0;local v167;local v168;while true do if (v166==1) then for v337=v167 + 1 ,v90 do v15(v168,v95[v337]);end break;end if (v166==0) then v167=v97[954 -(802 + 150) ];v168=v95[v167];v166=1;end end end elseif (v98<=(75 -47)) then local v169=0;local v170;local v171;local v172;local v173;while true do if (v169==1) then v90=(v172 + v170) -1 ;v173=0;v169=2;end if (v169==2) then for v338=v170,v90 do local v339=0;while true do if (v339==0) then v173=v173 + 1 ;v95[v338]=v171[v173];break;end end end break;end if (v169==0) then v170=v97[2];v171,v172=v88(v95[v170](v95[v170 + 1 ]));v169=1;end end elseif (v98>29) then local v242=0;local v243;local v244;local v245;while true do if (v242==1) then v245=v95[v243 + 2 ];if (v245>0) then if (v244>v95[v243 + 1 ]) then v89=v97[3];else v95[v243 + 3 ]=v244;end elseif (v244<v95[v243 + 1 ]) then v89=v97[3];else v95[v243 + 3 ]=v244;end break;end if (v242==0) then v243=v97[3 -1 ];v244=v95[v243];v242=1;end end else do return;end end elseif (v98<=35) then if (v98<=32) then if (v98>31) then v95[v97[2]]=v73[v97[3]];elseif  not v95[v97[2 + 0 ]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=33) then local v176=0;local v177;local v178;local v179;while true do if (v176==1) then v179=v95[v177] + v178 ;v95[v177]=v179;v176=2;end if (v176==2) then if (v178>0) then if (v179<=v95[v177 + 1 ]) then v89=v97[3];v95[v177 + 3 ]=v179;end elseif (v179>=v95[v177 + 1 ]) then local v402=0;while true do if (v402==0) then v89=v97[3];v95[v177 + 3 ]=v179;break;end end end break;end if (v176==0) then v177=v97[2];v178=v95[v177 + 2 ];v176=1;end end elseif (v98>34) then local v247=v97[2];v95[v247](v95[v247 + 1 ]);else v95[v97[2]]();end elseif (v98<=38) then if (v98<=36) then local v180=0;local v181;while true do if (0==v180) then v181=v97[2];v95[v181]=v95[v181](v21(v95,v181 + 1 ,v97[3]));break;end end elseif (v98==37) then v95[v97[2]]=v97[3]~=0 ;else local v249=0;local v250;while true do if (v249==0) then v250=v97[999 -(915 + 82) ];v95[v250](v21(v95,v250 + 1 ,v90));break;end end end elseif (v98<=(110 -71)) then v95[v97[2]]=v95[v97[3]]%v95[v97[4]] ;elseif (v98==40) then local v251=0;local v252;local v253;while true do if (v251==0) then v252=v97[2];v253={};v251=1;end if (v251==1) then for v380=1, #v94 do local v381=0;local v382;while true do if (v381==0) then v382=v94[v380];for v426=0 + 0 , #v382 do local v427=0;local v428;local v429;local v430;while true do if (v427==1) then v430=v428[2];if ((v429==v95) and (v430>=v252)) then v253[v430]=v429[v430];v428[1 -0 ]=v253;end break;end if (v427==0) then v428=v382[v426];v429=v428[1];v427=1;end end end break;end end end break;end end elseif (v97[2]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=62) then if (v98<=51) then if (v98<=(1233 -(1069 + 118))) then if (v98<=43) then if (v98==42) then if  not v95[v97[2]] then v89=v89 + (2 -1) ;else v89=v97[3];end else v95[v97[2]]=v97[6 -3 ]~=0 ;end elseif (v98<=44) then local v184=0;local v185;local v186;local v187;local v188;while true do if (v184==2) then for v341=v185,v90 do local v342=0;while true do if (v342==0) then v188=v188 + 1 + 0 ;v95[v341]=v186[v188];break;end end end break;end if (v184==1) then v90=(v187 + v185) -1 ;v188=0;v184=2;end if (v184==0) then v185=v97[2];v186,v187=v88(v95[v185](v21(v95,v185 + 1 ,v90)));v184=1;end end elseif (v98>45) then do return v95[v97[2]]();end else local v255=0;local v256;local v257;local v258;local v259;while true do if (v255==1) then v90=(v258 + v256) -1 ;v259=0 + 0 ;v255=2;end if (v255==2) then for v383=v256,v90 do local v384=0;while true do if (v384==0) then v259=v259 + 1 ;v95[v383]=v257[v259];break;end end end break;end if (v255==0) then v256=v97[2];v257,v258=v88(v95[v256](v21(v95,v256 + (1 -0) ,v97[3])));v255=1;end end end elseif (v98<=48) then if (v98>47) then local v189=0;local v190;local v191;local v192;local v193;while true do if (1==v189) then v90=(v192 + v190) -1 ;v193=0;v189=2;end if (v189==2) then for v343=v190,v90 do local v344=0;while true do if (v344==0) then v193=v193 + 1 ;v95[v343]=v191[v193];break;end end end break;end if (v189==0) then v190=v97[2];v191,v192=v88(v95[v190](v95[v190 + 1 ]));v189=1;end end else v95[v97[2]][v95[v97[3]]]=v95[v97[4]];end elseif (v98<=49) then v95[v97[2]][v97[3]]=v95[v97[4]];elseif (v98>50) then v95[v97[2]]= #v95[v97[3]];else local v261=0;local v262;local v263;while true do if (0==v261) then v262=v97[2];v263={};v261=1;end if (v261==1) then for v385=1, #v94 do local v386=0;local v387;while true do if (v386==0) then v387=v94[v385];for v431=791 -(368 + 423) , #v387 do local v432=0;local v433;local v434;local v435;while true do if (v432==1) then v435=v433[2];if ((v434==v95) and (v435>=v262)) then local v445=0;while true do if (0==v445) then v263[v435]=v434[v435];v433[1]=v263;break;end end end break;end if (v432==0) then v433=v387[v431];v434=v433[1];v432=1;end end end break;end end end break;end end end elseif (v98<=56) then if (v98<=(166 -113)) then if (v98==52) then v95[v97[20 -(10 + 8) ]]=v97[3];elseif v95[v97[2]] then v89=v89 + (3 -2) ;else v89=v97[3];end elseif (v98<=54) then v95[v97[2]]= #v95[v97[3]];elseif (v98==(497 -(416 + 26))) then if v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end else v95[v97[2]]=v73[v97[3]];end elseif (v98<=59) then if (v98<=57) then local v201=v97[2];v95[v201](v21(v95,v201 + 1 ,v90));elseif (v98==58) then v95[v97[2]]=v72[v97[3]];else local v269=0;local v270;local v271;while true do if (v269==0) then v270=v97[2];v271=v95[v97[3]];v269=1;end if (1==v269) then v95[v270 + (3 -2) ]=v271;v95[v270]=v271[v97[4]];break;end end end elseif (v98<=60) then v95[v97[2]]=v97[2 + 1 ] + v95[v97[4]] ;elseif (v98>61) then if (v97[2]==v95[v97[6 -2 ]]) then v89=v89 + 1 ;else v89=v97[3];end else local v272=0;local v273;while true do if (v272==0) then v273=v97[2];v95[v273](v95[v273 + 1 ]);break;end end end elseif (v98<=72) then if (v98<=67) then if (v98<=64) then if (v98==63) then for v223=v97[2],v97[3] do v95[v223]=nil;end else local v203=0;local v204;while true do if (v203==0) then v204=v97[2];v95[v204]=v95[v204](v21(v95,v204 + 1 ,v90));break;end end end elseif (v98<=65) then local v205=0;local v206;while true do if (v205==0) then v206=v97[440 -(145 + 293) ];do return v21(v95,v206,v90);end break;end end elseif (v98>66) then local v274=v97[2];v95[v274]=v95[v274]();else local v276=0;local v277;while true do if (v276==0) then v277=v97[2];do return v95[v277](v21(v95,v277 + 1 ,v97[3]));end break;end end end elseif (v98<=69) then if (v98==68) then local v207=0;local v208;while true do if (v207==0) then v208=v97[2];v95[v208](v21(v95,v208 + 1 ,v97[3]));break;end end else local v209=0;local v210;local v211;local v212;while true do if (v209==2) then for v347=1,v97[4] do v89=v89 + 1 ;local v348=v85[v89];if (v348[1]==(507 -(44 + 386))) then v212[v347-1 ]={v95,v348[1489 -(998 + 488) ]};else v212[v347-1 ]={v72,v348[3]};end v94[ #v94 + 1 ]=v212;end v95[v97[2]]=v40(v210,v211,v73);break;end if (v209==0) then v210=v86[v97[3]];v211=nil;v209=1;end if (v209==1) then v212={};v211=v18({},{[v7("\68\78\48\62\64\89\99","\60\27\17\89\80\36")]=function(v350,v351) local v352=0;local v353;while true do if (v352==0) then v353=v212[v351];return v353[1][v353[2]];end end end,[v7("\74\69\116\203\98\115\116\202\112\98","\174\21\26\26")]=function(v354,v355,v356) local v357=0;local v358;while true do if (v357==0) then v358=v212[v355];v358[1][v358[2]]=v356;break;end end end});v209=2;end end end elseif (v98<=70) then v95[v97[1 + 1 ]][v95[v97[3]]]=v95[v97[4]];elseif (v98>71) then local v278=0;local v279;local v280;local v281;local v282;while true do if (v278==2) then for v390=v279,v90 do v282=v282 + (773 -(201 + 571)) ;v95[v390]=v280[v282];end break;end if (v278==1) then v90=(v281 + v279) -1 ;v282=0 + 0 ;v278=2;end if (v278==0) then v279=v97[2];v280,v281=v88(v95[v279](v21(v95,v279 + 1 ,v90)));v278=1;end end else local v283=v97[2];do return v95[v283](v21(v95,v283 + (1139 -(116 + 1022)) ,v97[3]));end end elseif (v98<=77) then if (v98<=74) then if (v98>73) then v89=v97[3];else local v216=0;local v217;local v218;while true do if (v216==1) then for v359=v217 + 1 ,v90 do v15(v218,v95[v359]);end break;end if (0==v216) then v217=v97[2];v218=v95[v217];v216=1;end end end elseif (v98<=75) then do return;end elseif (v98>76) then v95[v97[2]]=v95[v97[3]];else local v286=0;local v287;local v288;local v289;local v290;while true do if (v286==0) then v287=v97[2];v288,v289=v88(v95[v287](v21(v95,v287 + 1 ,v97[3])));v286=1;end if (v286==2) then for v393=v287,v90 do local v394=0;while true do if (v394==0) then v290=v290 + 1 ;v95[v393]=v288[v290];break;end end end break;end if (v286==1) then v90=(v289 + v287) -1 ;v290=0;v286=2;end end end elseif (v98<=80) then if (v98<=(324 -246)) then v95[v97[2]]=v97[2 + 1 ];elseif (v98==79) then v95[v97[2]]=v97[3] + v95[v97[4]] ;else do return v95[v97[7 -5 ]]();end end elseif (v98<=81) then v95[v97[2]]=v72[v97[3]];elseif (v98==82) then v95[v97[2]][v97[3]]=v97[4];else local v294=v97[7 -5 ];v95[v294](v21(v95,v294 + (860 -(814 + 45)) ,v97[3]));end v89=v89 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
